From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Damien Caliste <dcaliste@free.fr>
Date: Wed, 5 Jan 2022 09:47:46 +0100
Subject: [PATCH] Revert "Port QStringRef (deprecated) to QStringView"

This reverts commit 80ccb98039bc361b6f3c45e7cf44c28d03b0844b.
---
 src/vcalformat.cpp | 109 +++++++++++++++++----------------------------
 1 file changed, 40 insertions(+), 69 deletions(-)

diff --git a/src/vcalformat.cpp b/src/vcalformat.cpp
index 054f67719..a64991fe2 100644
--- a/src/vcalformat.cpp
+++ b/src/vcalformat.cpp
@@ -328,15 +328,12 @@ Todo::Ptr VCalFormat::VTodoToEvent(VObject *vtodo)
         uint recurrenceType = Recurrence::rNone;
         int recurrenceTypeAbbrLen = 0;
 
-        s = fakeCString(vObjectUStringZValue(vo));
-        QString tmpStr = QString::fromUtf8(s);
+        QString tmpStr = (QString::fromUtf8(s = fakeCString(vObjectUStringZValue(vo))));
         deleteStr(s);
         tmpStr = tmpStr.simplified();
         const int tmpStrLen = tmpStr.length();
         if (tmpStrLen > 0) {
             tmpStr = tmpStr.toUpper();
-            QStringView prefix = QStringView(tmpStr).left(2);
-
             // first, read the type of the recurrence
             recurrenceTypeAbbrLen = 1;
             if (tmpStr.at(0) == QLatin1Char('D')) {
@@ -345,13 +342,13 @@ Todo::Ptr VCalFormat::VTodoToEvent(VObject *vtodo)
                 recurrenceType = Recurrence::rWeekly;
             } else if (tmpStrLen > 1) {
                 recurrenceTypeAbbrLen = 2;
-                if (prefix == QLatin1String("MP")) {
+                if (tmpStr.leftRef(2) == QLatin1String("MP")) {
                     recurrenceType = Recurrence::rMonthlyPos;
-                } else if (prefix == QLatin1String("MD")) {
+                } else if (tmpStr.leftRef(2) == QLatin1String("MD")) {
                     recurrenceType = Recurrence::rMonthlyDay;
-                } else if (prefix == QLatin1String("YM")) {
+                } else if (tmpStr.leftRef(2) == QLatin1String("YM")) {
                     recurrenceType = Recurrence::rYearlyMonth;
-                } else if (prefix == QLatin1String("YD")) {
+                } else if (tmpStr.leftRef(2) == QLatin1String("YD")) {
                     recurrenceType = Recurrence::rYearlyDay;
                 }
             }
@@ -361,11 +358,7 @@ Todo::Ptr VCalFormat::VTodoToEvent(VObject *vtodo)
             // Immediately after the type is the frequency
             int index = tmpStr.indexOf(QLatin1Char(' '));
             int last = tmpStr.lastIndexOf(QLatin1Char(' ')) + 1; // find last entry
-#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
-            const int rFreq = QStringView(tmpStr).mid(recurrenceTypeAbbrLen, (index - 1)).toInt();
-#else
-            const int rFreq = tmpStr.midRef(recurrenceTypeAbbrLen, (index - 1)).toInt();
-#endif
+            int rFreq = tmpStr.midRef(recurrenceTypeAbbrLen, (index - 1)).toInt();
             ++index; // advance to beginning of stuff after freq
 
             // Read the type-specific settings
@@ -499,12 +492,8 @@ Todo::Ptr VCalFormat::VTodoToEvent(VObject *vtodo)
             index = last;
             if (tmpStr.mid(index, 1) == QLatin1String("#")) {
                 // Nr of occurrences
-                ++index;
-#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
-                const int rDuration = QStringView(tmpStr).mid(index, tmpStr.length() - index).toInt();
-#else
-                const int rDuration = tmpStr.midRef(index, tmpStr.length() - index).toInt();
-#endif
+                index++;
+                int rDuration = tmpStr.midRef(index, tmpStr.length() - index).toInt();
                 if (rDuration > 0) {
                     anEvent->recurrence()->setDuration(rDuration);
                 }
@@ -779,8 +768,6 @@ Event::Ptr VCalFormat::VEventToEvent(VObject *vevent)
         const int tmpStrLen = tmpStr.length();
         if (tmpStrLen > 0) {
             tmpStr = tmpStr.toUpper();
-            const QStringView prefix(tmpStr.left(2));
-
             // first, read the type of the recurrence
             recurrenceTypeAbbrLen = 1;
             if (tmpStr.at(0) == QLatin1Char('D')) {
@@ -789,13 +776,13 @@ Event::Ptr VCalFormat::VEventToEvent(VObject *vevent)
                 recurrenceType = Recurrence::rWeekly;
             } else if (tmpStrLen > 1) {
                 recurrenceTypeAbbrLen = 2;
-                if (prefix == QLatin1String("MP")) {
+                if (tmpStr.leftRef(2) == QLatin1String("MP")) {
                     recurrenceType = Recurrence::rMonthlyPos;
-                } else if (prefix == QLatin1String("MD")) {
+                } else if (tmpStr.leftRef(2) == QLatin1String("MD")) {
                     recurrenceType = Recurrence::rMonthlyDay;
-                } else if (prefix == QLatin1String("YM")) {
+                } else if (tmpStr.leftRef(2) == QLatin1String("YM")) {
                     recurrenceType = Recurrence::rYearlyMonth;
-                } else if (prefix == QLatin1String("YD")) {
+                } else if (tmpStr.leftRef(2) == QLatin1String("YD")) {
                     recurrenceType = Recurrence::rYearlyDay;
                 }
             }
@@ -805,11 +792,7 @@ Event::Ptr VCalFormat::VEventToEvent(VObject *vevent)
             // Immediately after the type is the frequency
             int index = tmpStr.indexOf(QLatin1Char(' '));
             int last = tmpStr.lastIndexOf(QLatin1Char(' ')) + 1; // find last entry
-#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
-            const int rFreq = QStringView(tmpStr).mid(recurrenceTypeAbbrLen, (index - 1)).toInt();
-#else
-            const int rFreq = tmpStr.midRef(recurrenceTypeAbbrLen, (index - 1)).toInt();
-#endif
+            int rFreq = tmpStr.midRef(recurrenceTypeAbbrLen, (index - 1)).toInt();
             ++index; // advance to beginning of stuff after freq
 
             // Read the type-specific settings
@@ -943,12 +926,8 @@ Event::Ptr VCalFormat::VEventToEvent(VObject *vevent)
             index = last;
             if (tmpStr.mid(index, 1) == QLatin1String("#")) {
                 // Nr of occurrences
-                ++index;
-#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
-                const int rDuration = QStringView(tmpStr).mid(index, tmpStr.length() - index).toInt();
-#else
-                const int rDuration = tmpStr.midRef(index, tmpStr.length() - index).toInt();
-#endif
+                index++;
+                int rDuration = tmpStr.midRef(index, tmpStr.length() - index).toInt();
                 if (rDuration > 0) {
                     anEvent->recurrence()->setDuration(rDuration);
                 }
@@ -1235,22 +1214,24 @@ QString VCalFormat::qDateTimeToISO(const QDateTime &dt, bool zulu)
 
 QDateTime VCalFormat::ISOToQDateTime(const QString &dtStr)
 {
-#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
-    auto noAllocString = QStringView{dtStr};
-#else
-    auto noAllocString = QStringRef(&dtStr);
-#endif
-
-    int year = noAllocString.left(4).toInt();
-    int month = noAllocString.mid(4, 2).toInt();
-    int day = noAllocString.mid(6, 2).toInt();
-    int hour = noAllocString.mid(9, 2).toInt();
-    int minute = noAllocString.mid(11, 2).toInt();
-    int second = noAllocString.mid(13, 2).toInt();
-
     QDate tmpDate;
-    tmpDate.setDate(year, month, day);
     QTime tmpTime;
+    QString tmpStr;
+    int year;
+    int month;
+    int day;
+    int hour;
+    int minute;
+    int second;
+
+    tmpStr = dtStr;
+    year = tmpStr.leftRef(4).toInt();
+    month = tmpStr.midRef(4, 2).toInt();
+    day = tmpStr.midRef(6, 2).toInt();
+    hour = tmpStr.midRef(9, 2).toInt();
+    minute = tmpStr.midRef(11, 2).toInt();
+    second = tmpStr.midRef(13, 2).toInt();
+    tmpDate.setDate(year, month, day);
     tmpTime.setHMS(hour, minute, second);
 
     if (tmpDate.isValid() && tmpTime.isValid()) {
@@ -1260,22 +1241,20 @@ QDateTime VCalFormat::ISOToQDateTime(const QString &dtStr)
         } else {
             return QDateTime(tmpDate, tmpTime, d->mCalendar->timeZone());
         }
+    } else {
+        return QDateTime();
     }
-
-    return {};
 }
 
 QDate VCalFormat::ISOToQDate(const QString &dateStr)
 {
-#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
-    auto noAllocString = QStringView{dateStr};
-#else
-    auto noAllocString = QStringRef(&dateStr);
-#endif
+    int year;
+    int month;
+    int day;
 
-    const int year = noAllocString.left(4).toInt();
-    const int month = noAllocString.mid(4, 2).toInt();
-    const int day = noAllocString.mid(6, 2).toInt();
+    year = dateStr.leftRef(4).toInt();
+    month = dateStr.midRef(4, 2).toInt();
+    day = dateStr.midRef(6, 2).toInt();
 
     return QDate(year, month, day);
 }
@@ -1290,7 +1269,7 @@ bool VCalFormat::parseTZOffsetISO8601(const QString &s, int &result)
     // We also accept broken one without +
     int mod = 1;
     int v = 0;
-    const QString str = s.trimmed();
+    QString str = s.trimmed();
     int ofs = 0;
     result = 0;
 
@@ -1315,11 +1294,7 @@ bool VCalFormat::parseTZOffsetISO8601(const QString &s, int &result)
         return false;
     }
 
-#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
-    v = QStringView(str).mid(ofs, 2).toInt(&ok) * 60;
-#else
     v = str.midRef(ofs, 2).toInt(&ok) * 60;
-#endif
     if (!ok) {
         return false;
     }
@@ -1333,11 +1308,7 @@ bool VCalFormat::parseTZOffsetISO8601(const QString &s, int &result)
             if (str.size() < (ofs + 2)) {
                 return false;
             }
-#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
-            v += QStringView(str).mid(ofs, 2).toInt(&ok);
-#else
             v += str.midRef(ofs, 2).toInt(&ok);
-#endif
             if (!ok) {
                 return false;
             }
